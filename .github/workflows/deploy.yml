name: Deploy to PythonAnywhere

on:
  push:
    branches:
      - main


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: CI/CD

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'  

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
    

    - name: Create artifact
      run: |
        zip -r app.zip * .[^.]* -x "venv/*"

    - name: Deploy to PythonAnywhere
      env:
        PA_API_TOKEN: ${{ secrets.PA_API_TOKEN }}
        PA_USERNAME: ${{ secrets.PA_USERNAME }}
      run: |
        # Upload the zip file
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/files/path/home/${PA_USERNAME}/app.zip" \
             -H "Authorization: Token ${PA_API_TOKEN}" \
             --form file=@app.zip

        # Unzip the file, recreate venv, install dependencies, and clean up
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/consoles/" \
             -H "Authorization: Token ${PA_API_TOKEN}" \
             -d "command=bash -c 'cd ~ && unzip -o app.zip && rm app.zip && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt'"

        # Reload the web app
        curl -X POST "https://www.pythonanywhere.com/api/v0/user/${PA_USERNAME}/webapps/your_webapp_domain.com/reload/" \
             -H "Authorization: Token ${PA_API_TOKEN}"
